apply plugin: 'kotlin'
apply plugin: 'application'

apply plugin: 'kotlin-kapt'


sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = "1.8"

compileTestKotlin.kotlinOptions.jvmTarget = "1.8"


mainClassName = "net.dankito.accounting.javafx.AccountingJavaFXApp"

def title = 'Accounting'


def mavenArtifact = 'accounting-javafx'



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compile project(':AccountingCommon')

    compile "net.dankito.utils:java-fx-utils:$javaFxUtilsVersion"

    // needed for OpenPdf
    compile "org.bouncycastle:bcprov-jdk15on:1.61"
    compile "org.bouncycastle:bcpkix-jdk15on:1.61"

    compile "net.dankito.text.extraction:text-extractor-common:$textExtractorVersion"
    compile "net.dankito.text.extraction:poppler-text-extractor:$textExtractorVersion"
    compile "net.dankito.text.extraction:openpdf-text-extractor:$textExtractorVersion"

    compile "com.couchbase.lite:couchbase-lite-java:$couchbaseLiteVersion"

    compile "org.apache.commons:commons-csv:$apacheCommonsCsvVersion"

    compile "ch.qos.logback:logback-core:$logbackVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"


    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    testCompile "junit:junit:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion" // so that Mockito.any() doesn't return null which null-safe Kotlin parameter don't like
    // for how to enable mocking final class (which is standard in Kotlin) with Mockito see https://github.com/mockito/mockito/wiki/What's-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods
}


jar {
    manifest {
        attributes  'Main-Class': mainClassName,
                'Implementation-Title': title,
                'Implementation-Version': appVersionName
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}