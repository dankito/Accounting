apply plugin: 'kotlin'

apply plugin: 'kotlin-kapt'


sourceCompatibility = 1.7

compileKotlin.kotlinOptions.jvmTarget = "1.6"

compileTestKotlin.kotlinOptions.jvmTarget = "1.6"


def mavenArtifact = 'accounting-common'


sourceSets {
    main {
        java {
            srcDirs += [ "${buildDir.absolutePath}/generated/source/kapt/main/" ]
        }
    }
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    compile "net.dankito.tax:elster:$elsterVersion"

    compile "net.dankito.utils:java-utils:$javaUtilsVersion"


    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.odt:$xdocReportVersion"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.velocity:$xdocReportVersion"
    compile "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.odt.odfdom:$xdocReportVersion"

    compile "ch.aaap:harvest-client:$harvestClientVersion"


    compile "com.couchbase.lite:couchbase-lite-java-core:$couchbaseLiteVersion"

    compile "net.dankito.jpa.couchbaselite:couchbase-lite-jpa:$couchbaseLiteJpaVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'


    kapt "net.dankito.jpa.annotationreader:jpa-apt:$jpaAptVersion"

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"


    testCompile "junit:junit:$junitVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion" // so that Mockito.any() doesn't return null which null-safe Kotlin parameter don't like
    // for how to enable mocking final class (which is standard in Kotlin) with Mockito see https://github.com/mockito/mockito/wiki/What's-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods

    testCompile "com.couchbase.lite:couchbase-lite-java:$couchbaseLiteVersion"
}